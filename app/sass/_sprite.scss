// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$bq-name: 'bq';
$bq-x: 262px;
$bq-y: 161px;
$bq-offset-x: -262px;
$bq-offset-y: -161px;
$bq-width: 58px;
$bq-height: 67px;
$bq-total-width: 348px;
$bq-total-height: 887px;
$bq-image: '../img/png_sprite/sprite.png';
$bq: (262px, 161px, -262px, -161px, 58px, 67px, 348px, 887px, '../img/png_sprite/sprite.png', 'bq', );
$bread-arrow-name: 'bread-arrow';
$bread-arrow-x: 338px;
$bread-arrow-y: 191px;
$bread-arrow-offset-x: -338px;
$bread-arrow-offset-y: -191px;
$bread-arrow-width: 9px;
$bread-arrow-height: 7px;
$bread-arrow-total-width: 348px;
$bread-arrow-total-height: 887px;
$bread-arrow-image: '../img/png_sprite/sprite.png';
$bread-arrow: (338px, 191px, -338px, -191px, 9px, 7px, 348px, 887px, '../img/png_sprite/sprite.png', 'bread-arrow', );
$check-name: 'check';
$check-x: 320px;
$check-y: 183px;
$check-offset-x: -320px;
$check-offset-y: -183px;
$check-width: 18px;
$check-height: 15px;
$check-total-width: 348px;
$check-total-height: 887px;
$check-image: '../img/png_sprite/sprite.png';
$check: (320px, 183px, -320px, -183px, 18px, 15px, 348px, 887px, '../img/png_sprite/sprite.png', 'check', );
$d-1-name: 'd-1';
$d-1-x: 0px;
$d-1-y: 426px;
$d-1-offset-x: 0px;
$d-1-offset-y: -426px;
$d-1-width: 177px;
$d-1-height: 461px;
$d-1-total-width: 348px;
$d-1-total-height: 887px;
$d-1-image: '../img/png_sprite/sprite.png';
$d-1: (0px, 426px, 0px, -426px, 177px, 461px, 348px, 887px, '../img/png_sprite/sprite.png', 'd-1', );
$d-2-name: 'd-2';
$d-2-x: 0px;
$d-2-y: 0px;
$d-2-offset-x: 0px;
$d-2-offset-y: 0px;
$d-2-width: 217px;
$d-2-height: 426px;
$d-2-total-width: 348px;
$d-2-total-height: 887px;
$d-2-image: '../img/png_sprite/sprite.png';
$d-2: (0px, 0px, 0px, 0px, 217px, 426px, 348px, 887px, '../img/png_sprite/sprite.png', 'd-2', );
$d-arrow-left-name: 'd-arrow-left';
$d-arrow-left-x: 320px;
$d-arrow-left-y: 212px;
$d-arrow-left-offset-x: -320px;
$d-arrow-left-offset-y: -212px;
$d-arrow-left-width: 12px;
$d-arrow-left-height: 12px;
$d-arrow-left-total-width: 348px;
$d-arrow-left-total-height: 887px;
$d-arrow-left-image: '../img/png_sprite/sprite.png';
$d-arrow-left: (320px, 212px, -320px, -212px, 12px, 12px, 348px, 887px, '../img/png_sprite/sprite.png', 'd-arrow-left', );
$d-arrow-right-name: 'd-arrow-right';
$d-arrow-right-x: 335px;
$d-arrow-right-y: 198px;
$d-arrow-right-offset-x: -335px;
$d-arrow-right-offset-y: -198px;
$d-arrow-right-width: 12px;
$d-arrow-right-height: 12px;
$d-arrow-right-total-width: 348px;
$d-arrow-right-total-height: 887px;
$d-arrow-right-image: '../img/png_sprite/sprite.png';
$d-arrow-right: (335px, 198px, -335px, -198px, 12px, 12px, 348px, 887px, '../img/png_sprite/sprite.png', 'd-arrow-right', );
$help-1-name: 'help-1';
$help-1-x: 217px;
$help-1-y: 330px;
$help-1-offset-x: -217px;
$help-1-offset-y: -330px;
$help-1-width: 45px;
$help-1-height: 55px;
$help-1-total-width: 348px;
$help-1-total-height: 887px;
$help-1-image: '../img/png_sprite/sprite.png';
$help-1: (217px, 330px, -217px, -330px, 45px, 55px, 348px, 887px, '../img/png_sprite/sprite.png', 'help-1', );
$help-2-name: 'help-2';
$help-2-x: 217px;
$help-2-y: 280px;
$help-2-offset-x: -217px;
$help-2-offset-y: -280px;
$help-2-width: 53px;
$help-2-height: 50px;
$help-2-total-width: 348px;
$help-2-total-height: 887px;
$help-2-image: '../img/png_sprite/sprite.png';
$help-2: (217px, 280px, -217px, -280px, 53px, 50px, 348px, 887px, '../img/png_sprite/sprite.png', 'help-2', );
$modal-close-name: 'modal-close';
$modal-close-x: 320px;
$modal-close-y: 161px;
$modal-close-offset-x: -320px;
$modal-close-offset-y: -161px;
$modal-close-width: 22px;
$modal-close-height: 22px;
$modal-close-total-width: 348px;
$modal-close-total-height: 887px;
$modal-close-image: '../img/png_sprite/sprite.png';
$modal-close: (320px, 161px, -320px, -161px, 22px, 22px, 348px, 887px, '../img/png_sprite/sprite.png', 'modal-close', );
$preload-1-name: 'preload-1';
$preload-1-x: 217px;
$preload-1-y: 0px;
$preload-1-offset-x: -217px;
$preload-1-offset-y: 0px;
$preload-1-width: 131px;
$preload-1-height: 161px;
$preload-1-total-width: 348px;
$preload-1-total-height: 887px;
$preload-1-image: '../img/png_sprite/sprite.png';
$preload-1: (217px, 0px, -217px, 0px, 131px, 161px, 348px, 887px, '../img/png_sprite/sprite.png', 'preload-1', );
$preload-2-name: 'preload-2';
$preload-2-x: 262px;
$preload-2-y: 228px;
$preload-2-offset-x: -262px;
$preload-2-offset-y: -228px;
$preload-2-width: 72px;
$preload-2-height: 51px;
$preload-2-total-width: 348px;
$preload-2-total-height: 887px;
$preload-2-image: '../img/png_sprite/sprite.png';
$preload-2: (262px, 228px, -262px, -228px, 72px, 51px, 348px, 887px, '../img/png_sprite/sprite.png', 'preload-2', );
$spinner-name: 'spinner';
$spinner-x: 320px;
$spinner-y: 198px;
$spinner-offset-x: -320px;
$spinner-offset-y: -198px;
$spinner-width: 15px;
$spinner-height: 14px;
$spinner-total-width: 348px;
$spinner-total-height: 887px;
$spinner-image: '../img/png_sprite/sprite.png';
$spinner: (320px, 198px, -320px, -198px, 15px, 14px, 348px, 887px, '../img/png_sprite/sprite.png', 'spinner', );
$stick-name: 'stick';
$stick-x: 217px;
$stick-y: 161px;
$stick-offset-x: -217px;
$stick-offset-y: -161px;
$stick-width: 45px;
$stick-height: 119px;
$stick-total-width: 348px;
$stick-total-height: 887px;
$stick-image: '../img/png_sprite/sprite.png';
$stick: (217px, 161px, -217px, -161px, 45px, 119px, 348px, 887px, '../img/png_sprite/sprite.png', 'stick', );
$ul-label-name: 'ul-label';
$ul-label-x: 338px;
$ul-label-y: 183px;
$ul-label-offset-x: -338px;
$ul-label-offset-y: -183px;
$ul-label-width: 9px;
$ul-label-height: 8px;
$ul-label-total-width: 348px;
$ul-label-total-height: 887px;
$ul-label-image: '../img/png_sprite/sprite.png';
$ul-label: (338px, 183px, -338px, -183px, 9px, 8px, 348px, 887px, '../img/png_sprite/sprite.png', 'ul-label', );
$webvision-hover-name: 'webvision-hover';
$webvision-hover-x: 217px;
$webvision-hover-y: 385px;
$webvision-hover-offset-x: -217px;
$webvision-hover-offset-y: -385px;
$webvision-hover-width: 87px;
$webvision-hover-height: 15px;
$webvision-hover-total-width: 348px;
$webvision-hover-total-height: 887px;
$webvision-hover-image: '../img/png_sprite/sprite.png';
$webvision-hover: (217px, 385px, -217px, -385px, 87px, 15px, 348px, 887px, '../img/png_sprite/sprite.png', 'webvision-hover', );
$webvision-name: 'webvision';
$webvision-x: 217px;
$webvision-y: 400px;
$webvision-offset-x: -217px;
$webvision-offset-y: -400px;
$webvision-width: 87px;
$webvision-height: 15px;
$webvision-total-width: 348px;
$webvision-total-height: 887px;
$webvision-image: '../img/png_sprite/sprite.png';
$webvision: (217px, 400px, -217px, -400px, 87px, 15px, 348px, 887px, '../img/png_sprite/sprite.png', 'webvision', );
$spritesheet-width: 348px;
$spritesheet-height: 887px;
$spritesheet-image: '../img/png_sprite/sprite.png';
$spritesheet-sprites: ($bq, $bread-arrow, $check, $d-1, $d-2, $d-arrow-left, $d-arrow-right, $help-1, $help-2, $modal-close, $preload-1, $preload-2, $spinner, $stick, $ul-label, $webvision-hover, $webvision, );
$spritesheet: (348px, 887px, '../img/png_sprite/sprite.png', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
